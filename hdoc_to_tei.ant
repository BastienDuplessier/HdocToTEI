<?xml version="1.0" encoding="UTF-8"?>
<project name="converter" basedir="." default="convert">
  <!--
       How-to :
       ant -buildfile hdoc_to_tei.ant -DInputPath="in.hdoc" -DOutputPath="out" convert

       with in.hdoc
       result will be into output/out directory
  -->
  <property file="build.properties"/>

  <!--
  ===================================================================================
    INIT TARGETS
  ===================================================================================
  -->
  <!-- Make sure needed directories exists -->
  <target name="init">
    <mkdir dir="${output_dir}"/>
    <delete dir="${output_dir}/${OutputPath}"/>
    <mkdir dir="${output_dir}/${OutputPath}"/>
    <mkdir dir="${output_dir}/temp"/>
  </target>

  <!-- Clean project -->
  <target name="clear">
    <delete dir="./${output_dir}/temp"/>
    <delete file="./apply_before.ant"/>
  </target>

  <!-- Fonction DÃ©zipage -->
  <target name="unzip">
    <unzip dest="${output_dir}/temp/unzipped" src="${InputPath}"/>
  </target>

  <!--
  ===================================================================================
    RESOURCE HANDLING
  ===================================================================================
  -->

  <!-- Check if there is resources to copy -->
  <target name="check_resources">
    <condition property="res.exists">
      <available file="${output_dir}/temp/unzipped/res" type="dir"/>
    </condition>
  </target>

  <!-- Copy resources into output dir -->
  <target name="extract_resources" depends="check_resources" if="res.exists">
    <mkdir dir="${output_dir}/${OutputPath}/res"/>
    <copy todir="${output_dir}/${OutputPath}">
      <fileset dir="${output_dir}/temp/unzipped/res"/>
    </copy>
  </target>

  <!--
  ===================================================================================
    CONVERT
  ===================================================================================
  -->

  <!-- Copy schema into dest dir -->
  <target name="copy_schema">
    <copy
	file="${schema_path}"
	tofile="${output_dir}/${OutputPath}/schema.rnc"/>
  </target>

  <!-- Find content file, from hdoc_to_opale.ant file  -->
  <target name="build_before_ant">
    <!-- Finds the absolute path of container.xml -->
    <first id="first">
      <fileset dir="${output_dir}/temp/unzipped/META-INF" includes="**/container.xml"/>
    </first>
    <!-- Build ant file (apply_before.ant) to apply before.xsl on content.xml -->
    <xslt in="${toString:first}" out="apply_before.ant" style="${xsl_dir}/extract_content.xsl"
	  classpath="${lib_dir}/saxon9he.jar">
      <factory name="net.sf.saxon.TransformerFactoryImpl"/>
    </xslt>
    <!-- Call ant file previously  -->
    <ant antfile="apply_before.ant" target="start"/>
  </target>

  <!-- Apply html2tei XSLT  -->
  <target name="apply_html2tei">
    <xslt in="${output_dir}/temp/past_before.xml" out="${output_dir}/temp/past_convert.xml"
	  style="${xsl_dir}/html2tei.xsl"
	  classpath="${lib_dir}/saxon9he.jar">
      <factory name="net.sf.saxon.TransformerFactoryImpl"/>
    </xslt>
  </target>

  <!-- Apply after XSLT  -->
  <target name="apply_after">
    <xslt in="${output_dir}/temp/past_convert.xml" out="${output_dir}/${OutputPath}/content.xml"
	  style="${xsl_dir}/after.xsl"
	  classpath="${lib_dir}/saxon9he.jar">
      <factory name="net.sf.saxon.TransformerFactoryImpl"/>
    </xslt>
  </target>

  <!-- Base -->
  <target name="transform" depends="build_before_ant, apply_html2tei, apply_after"/>
  <target name="convert" depends="init, unzip, extract_resources, copy_schema, transform, clear"/>
</project>
